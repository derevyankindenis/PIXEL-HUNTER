import assert from 'assert';
import {calculateScore} from './game-data';

describe(`Тестирование функции подсчета очков`, () => {
  it(`Если игрок ответил меньше чем на 10 ответов, то очки не начисляются`, () => {
    assert.equal(calculateScore([], 0), -1);
    assert.equal(calculateScore([0, 0], 1), -1);
    assert.equal(calculateScore([0, 100, 150, 50, 0, 100], 1), -1);
    assert.notEqual(calculateScore([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1), -1);
    assert.notEqual(calculateScore([150, 100, 0, 50, 150, 100, 0, 50, 150, 100], 1), -1);
  });

  it(`Если у игрока кончились жизни, то очки не начисляются`, () => {
    assert.equal(calculateScore([100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 0), -1);
  });

  it(`Если у игрока остались все жизни и он ответил на все вопросы не быстро и не медленно, то начисляется 1150 очков`, () => {
    assert.equal(calculateScore([100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 3), 1150);
  });

  it(`Если игрок ответил на все вопросы быстро и сохранил все жизни, то ему наисляется 1650`, () => {
    assert.equal(calculateScore([150, 150, 150, 150, 150, 150, 150, 150, 150, 150], 3), 1650);
  });

});
